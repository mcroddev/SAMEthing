// SPDX-License-Identifier: MIT
//
// Copyright 2023 Michael Rodriguez
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the “Software”), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#ifndef SAMETHING_QT_FRONTEND_CONTROLLERS_LOCATION_CODE_EDITOR_H
#define SAMETHING_QT_FRONTEND_CONTROLLERS_LOCATION_CODE_EDITOR_H

#pragma once

#include <QDialog>

#include "ui_location_code_editor.h"

/// Defines the controller for the location code editor.
class LocationCodeEditorDialogController final : public QDialog {
  Q_OBJECT

 public:
  LocationCodeEditorDialogController() noexcept;

  /// Adds a county subdivision to the county subdivisions combo box.
  ///
  /// @param str The full description of a county subdivision.
  void CountySubdivisionAdd(const QString& str) noexcept;

  /// Adds a state to the state combo box.
  ///
  /// @param str The full name of a state.
  void StateAdd(const QString& str) noexcept;

  /// Adds a county to the county combo box.
  ///
  /// @param str The full name of the county.
  void CountyAdd(const QString& str) noexcept;

  /// Clears the list of counties currently populated. This is necessary when
  /// the selected state changes.
  void CountyListClear() noexcept;

 private:
  /// Connects signals from various controls to slots.
  void SignalsConnectToSlots() noexcept;

  /// The UI as generated by Qt Designer.
  Ui::LocationCodeEditorDialog ui_;

 signals:
  /// Emitted when the user changes the selected state.
  ///
  /// @param num The index of the selected state in the combo box; this
  /// corresponds to the index in the database.
  void StateChanged(int num);

  /// Emitted when the user selects "Ok".
  ///
  /// @param county_subdivision_index The index of the selected county
  /// subdivision in the combo box; this corresponds to the index in the
  /// database.
  /// @param state_index The index of the selected state in the combo box; this
  /// corresponds to the index in the database.
  /// @param county_num The index of the selected county within the selected
  /// state in the combo box; this corresponds to the index of the database.
  void NewEntry(const int county_subdivision_index, const int state_index,
                const int county_num);
};

#endif  // SAMETHING_QT_FRONTEND_CONTROLLERS_LOCATION_CODE_EDITOR_H
